{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dasboard/dasboard.component.css","webpack:///./src/app/dasboard/dasboard.component.html","webpack:///./src/app/dasboard/dasboard.component.ts","webpack:///./src/app/hero-detail/hero-detail.component.css","webpack:///./src/app/hero-detail/hero-detail.component.html","webpack:///./src/app/hero-detail/hero-detail.component.ts","webpack:///./src/app/hero.service.ts","webpack:///./src/app/hero.ts","webpack:///./src/app/heroes/heroes.component.css","webpack:///./src/app/heroes/heroes.component.html","webpack:///./src/app/heroes/heroes.component.ts","webpack:///./src/app/login.service.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/message.service.ts","webpack:///./src/app/messages/messages.component.css","webpack:///./src/app/messages/messages.component.html","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/scans/scans.component.css","webpack:///./src/app/scans/scans.component.html","webpack:///./src/app/scans/scans.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HeroesComponent }      from './heroes/heroes.component';\nimport { DasboardComponent }   from './dasboard/dasboard.component';\nimport { HeroDetailComponent }  from './hero-detail/hero-detail.component';\nimport { ScansComponent }  from './scans/scans.component';\nimport { LoginComponent }  from './login/login.component';\n\nconst routes: Routes = [\n    { path: '', redirectTo: '/login', pathMatch: 'full' },\n    { path: 'login', component: LoginComponent},\n    { path: 'heroes', component: HeroesComponent},\n    { path: 'dashboard', component: DasboardComponent},\n    { path: 'scans', component: ScansComponent},\n    { path: 'detail/:id', component: HeroDetailComponent },\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<!-- <nav>\\n    <a routerLink=\\\"/dashboard\\\">Dashboard</a><br>\\n    <a routerLink=\\\"/scans\\\">Scan QR code</a><br>\\n    <a routerLink=\\\"/heroes\\\">Heroes</a>\\n</nav> -->\\n<!-- <app-messages></app-messages> -->\\n<!-- filter data -->\\n<router-outlet></router-outlet>\\n<!-- end filter data -->\\n\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'My First Angular App!';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\n\nimport { AppComponent } from './app.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { DasboardComponent } from './dasboard/dasboard.component';\n\nimport { HttpClientModule }    from '@angular/common/http';\nimport { ScansComponent } from './scans/scans.component';\nimport { LoginComponent } from './login/login.component';\n\nimport { HttpClientInMemoryWebApiModule } from 'angular-in-memory-web-api';\n// import { InMemoryDataService }  from './in-memory-data.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    DasboardComponent,\n    ScansComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n\n    // The HttpClientInMemoryWebApiModule module intercepts HTTP requests\n    // and returns simulated server responses.\n    // Remove it when a real server is ready to receive requests.\n    // HttpClientInMemoryWebApiModule.forRoot(\n    //   InMemoryDataService, { dataEncapsulation: false }\n    // )\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"/* DashboardComponent's private CSS styles */\\r\\n[class*='col-'] {\\r\\n  float: left;\\r\\n  padding-right: 20px;\\r\\n  padding-bottom: 20px;\\r\\n}\\r\\n[class*='col-']:last-of-type {\\r\\n  padding-right: 0;\\r\\n}\\r\\na {\\r\\n  text-decoration: none;\\r\\n}\\r\\n*, *:after, *:before {\\r\\n  box-sizing: border-box;\\r\\n}\\r\\nh3 {\\r\\n  text-align: center; margin-bottom: 0;\\r\\n}\\r\\nh4 {\\r\\n  position: relative;\\r\\n}\\r\\n.grid {\\r\\n  margin: 0;\\r\\n}\\r\\n.col-1-4 {\\r\\n  width: 25%;\\r\\n}\\r\\n.module {\\r\\n  padding: 20px;\\r\\n  text-align: center;\\r\\n  color: #eee;\\r\\n  max-height: 120px;\\r\\n  min-width: 120px;\\r\\n  background-color: #607D8B;\\r\\n  border-radius: 2px;\\r\\n}\\r\\n.module:hover {\\r\\n  background-color: #EEE;\\r\\n  cursor: pointer;\\r\\n  color: #607d8b;\\r\\n}\\r\\n.grid-pad {\\r\\n  padding: 10px 0;\\r\\n}\\r\\n.grid-pad > [class*='col-']:last-of-type {\\r\\n  padding-right: 20px;\\r\\n}\\r\\n@media (max-width: 600px) {\\r\\n  .module {\\r\\n    font-size: 10px;\\r\\n    max-height: 75px; }\\r\\n}\\r\\n@media (max-width: 1024px) {\\r\\n  .grid {\\r\\n    margin: 0;\\r\\n  }\\r\\n  .module {\\r\\n    min-width: 60px;\\r\\n  }\\r\\n}\"","module.exports = \"{{heroes | json}}\\n<h3>Top Heroes</h3>\\n<div class=\\\"grid grid-pad\\\">\\n  <a *ngFor=\\\"let hero of heroes\\\" class=\\\"col-1-4\\\"  routerLink=\\\"/detail/{{hero.id}}\\\">\\n    <div class=\\\"module hero\\\">\\n      <h4>{{hero.name}}</h4>\\n    </div>\\n  </a>\\n  <app-messages></app-messages>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dasboard',\n  templateUrl: './dasboard.component.html',\n  styleUrls: ['./dasboard.component.css']\n})\nexport class DasboardComponent implements OnInit {\n    heroes: Hero[] = [];\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n      this.getHeroes();\n  }\n  getHeroes(): void {\n    this.heroService.getHeroes()\n      .subscribe(\n        heroes => this.heroes = heroes\n        );\n      \n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"hero\\\">\\n    <h2>Detail of {{hero.name | uppercase}}</h2>\\n    <div><span>id: </span>{{hero.id}}</div>\\n      <div>\\n        <label>name:\\n          <input [(ngModel)]=\\\"hero.name\\\" placeholder=\\\"name\\\">\\n        </label>\\n      </div>\\n</div>\\n<button (click)=\\\"save()\\\">save</button>\\n<button (click)=\\\"goBack()\\\">go back</button>\"","import { Component, OnInit, Input } from '@angular/core';\n\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { HeroService }  from '../hero.service';\n\nimport {Hero} from '../hero';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.css']\n})\nexport class HeroDetailComponent implements OnInit {\n    @Input() hero: Hero;\n    constructor(\n        private route: ActivatedRoute,\n        private heroService: HeroService,\n        private location: Location\n    ) {}\n\n      ngOnInit() {\n          this.getHero();\n      }\n\n      getHero(): void {\n          const id = +this.route.snapshot.paramMap.get('id');\n          this.heroService.getHero(id)\n            .subscribe(hero => this.hero = hero);\n        }\n    goBack(): void {\n        this.location.back();\n    }\n    save(): void {\n     this.heroService.updateHero(this.hero)\n       .subscribe(() => this.goBack());\n   }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Hero } from './hero';\nimport { HEROES } from './mock-heroes';\nimport { Observable, of} from 'rxjs';//same callback function\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { MessageService } from './message.service';\n\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeroService {\n    private heroesUrl = 'api/heroes';  // URL to web api\n\n    private urlTest = 'http://cartplus-api.loc/api/test/index';\n    private urlTestPost = 'http://cartplus-api.loc/api/test/detail';\n    private urlLoginPolan = 'http://103.18.6.158:1111/api/auth/login';\n    private urlLoginCarplus = \"http://cartplus-api.loc/api/user/login\";\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) {\n  }\n  \n    getHeroes(): Observable<Hero[]> {\n      // TODO: send the message _after_ fetching the heroes\n      return this.http.get<Hero[]>(this.urlTest)\n      .pipe(\n        map(data => data),\n        tap(heroes => this.log(`fetched heroes`)),\n        catchError(this.handleError('getHeroes', []))\n      );\n    }\n\n    getApi(): Observable<Hero[]> {\n      // TODO: send the message _after_ fetching the heroes\n      return this.http.get<Hero[]>(this.urlTest)\n      .pipe(\n        tap(heroes => this.log(`fetched heroes`)),\n        catchError(this.handleError('getHeroes', []))\n      );\n    }\n    postApi(hero:Hero): Observable<any>{\n      return this.http.post<Hero>(this.heroesUrl, 'hero', httpOptions).pipe(\n        tap((hero: Hero) => this.log(`added hero w/ id=${hero.id}`)),\n        catchError(this.handleError<Hero>('addHero'))\n      );\n    }\n \n  getHero(id: number): Observable<Hero> {\n    const url = `${this.heroesUrl}/${id}`;\n    return this.http.get<Hero>(url).pipe(\n      tap(_ => this.log(`fetched hero id=${id}`)),\n      catchError(this.handleError<Hero>(`getHero id=${id}`))\n    );\n    // TODO: send the message _after_ fetching the hero\n    // this.messageService.add('HeroService: fetched hero id='+`${id}`);//the backticks ( ` ) that define a JavaScript template literal for embedding the id.\n    // return of(HEROES.find(hero => hero.id === id));\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero (hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  /** POST: add a new hero to the server */\n  addHero (hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.urlTestPost, hero, httpOptions)\n    .pipe(\n      tap((hero: Hero) => this.log(`added hero w/ id=${hero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n    loginPolan () {\n      let data = {email:\"duc4@runsystem.net\",\n      password:\"123321\",\n      os_type:1}\n    return this.http.post(this.urlLoginPolan, data, httpOptions)\n    .pipe(\n      tap(data => data),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero (hero: Hero | number): Observable<Hero> {\n    const id = typeof hero === 'number' ? hero : hero.id;\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n   /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n    private handleError<T> (operation = 'operation', result?: T) {\n      return (error: any): Observable<T> => {\n   \n        // TODO: send the error to remote logging infrastructure\n        console.error(error); // log to console instead\n   \n        // TODO: better job of transforming error for user consumption\n        this.log(`${operation} failed: ${error.message}`);\n   \n        // Let the app keep running by returning an empty result.\n        return of(result as T);\n      };\n    }\n \n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add('HeroService: ' + message);\n  }\n}\n","export class Hero {\r\n    id: number;\r\n    name: string;\r\n}","module.exports = \"/* HeroesComponent's private CSS styles */\\r\\n.selected {\\r\\n  background-color: #CFD8DC !important;\\r\\n  color: white;\\r\\n}\\r\\n.heroes {\\r\\n  margin: 0 0 2em 0;\\r\\n  list-style-type: none;\\r\\n  padding: 0;\\r\\n  width: 15em;\\r\\n}\\r\\n.heroes li {\\r\\n  cursor: pointer;\\r\\n  position: relative;\\r\\n  left: 0;\\r\\n  background-color: #EEE;\\r\\n  margin: .5em;\\r\\n  padding: .3em 0;\\r\\n  height: 1.6em;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n.heroes li.selected:hover {\\r\\n  background-color: #BBD8DC !important;\\r\\n  color: white;\\r\\n}\\r\\n.heroes li:hover {\\r\\n  color: #607D8B;\\r\\n  background-color: #DDD;\\r\\n  left: .1em;\\r\\n}\\r\\n.heroes .text {\\r\\n  position: relative;\\r\\n  top: -3px;\\r\\n}\\r\\n.heroes .badge {\\r\\n  display: inline-block;\\r\\n  font-size: small;\\r\\n  color: white;\\r\\n  padding: 0.8em 0.7em 0 0.7em;\\r\\n  background-color: #607D8B;\\r\\n  line-height: 1em;\\r\\n  position: relative;\\r\\n  left: -1px;\\r\\n  top: -4px;\\r\\n  height: 1.8em;\\r\\n  margin-right: .8em;\\r\\n  border-radius: 4px 0 0 4px;\\r\\n}\"","module.exports = \"<div>\\n  <label>Hero name:\\n    <input #heroName />\\n  </label>\\n  <!-- (click) passes input value to add() and then clears the input -->\\n  <button (click)=\\\"add(heroName.value); heroName.value=''\\\">\\n    add\\n  </button>\\n</div>\\n<h2>My Heroes</h2>\\n<ul class=\\\"heroes\\\">\\n  <li *ngFor=\\\"let hero of heroes\\\"\\n    [class.selected]=\\\"hero === selectedHero\\\"\\n    (click)=\\\"onSelect(hero)\\\">\\n    <a routerLink='/detail/{{hero.id}}'>\\n        <span class=\\\"badge\\\">{{hero.id}}</span> {{hero.name}}\\n    </a>\\n    <button class=\\\"delete\\\" title=\\\"delete hero\\\"\\n    (click)=\\\"delete(hero)\\\">x</button>\\n  </li>\\n</ul>\\n<app-hero-detail></app-hero-detail>\\n<!-- <app-hero-detail [heros]=\\\"selectedHero\\\"></app-hero-detail> -->\"","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HEROES } from '../mock-heroes';\nimport { HeroService } from '../hero.service';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n    selectedHero: Hero;\n    heroes: Hero[];\n    onSelect(hero:Hero): void {\n        this.selectedHero = hero;\n    }\n    constructor( \n        private http: HttpClient,\n        private heroService:HeroService) { \n\n        this.heroService.loginPolan().subscribe(data => console.log(data));\n\n        // this.heroService.getApi().subscribe(data => {\n        //   console.log(data);\n        // });\n    }\n\n    getPostApi(hero:Hero){\n        this.heroService.postApi(hero).subscribe(data => {\n          console.log(data);\n        });\n    }\n    ngOnInit() {\n        this.getHeroes();\n        // this.getApt();\n    }\n\n    getHeroes(): void {\n        this.heroService.getHeroes().subscribe(heroes => this.heroes = heroes);\n    }\n\n    add(name: string): void {\n      name = name.trim();\n      if (!name) { return; }\n      this.heroService.addHero({ name } as Hero)\n        .subscribe(\n            // hero => {\n            //   this.heroes.push(hero);\n            // }\n        );\n    }\n\n    delete(hero: Hero): void {\n      this.heroes = this.heroes.filter(h => h !== hero);\n      this.heroService.deleteHero(hero).subscribe();\n    }\n\n    getApt():void {\n        const urlApt = 'http://cartplus-api.loc/api/category/list.json?client_id=1';\n        // test api\n        this.http.get(urlApt).subscribe(data => {\n          console.log(data);\n        },\n        err => {\n          console.log(\"Error occured\");\n        });\n        // end\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap, retry } from 'rxjs/operators';\n\nimport { Login } from './login';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private urlLoginPolan = 'http://103.18.6.158:1111/api/auth/login';\n\n  constructor(private http: HttpClient) { }\n\n  loginPolan (data:Login) {\n    return this.http.post(this.urlLoginPolan, data, httpOptions)\n    .pipe(\n      map(data => data),\n      tap(data => data),\n      // catchError(this.handleError())\n    );\n  }\n\n  // protected handleError (error: Response | any) {\n  //     // In a real world app, you might use a remote logging infrastructure\n  //     let errMsg: any;\n  //     if (error instanceof Response) {\n  //       const body = error.json() || '';\n  //       const err = body || JSON.stringify(body);\n  //       errMsg = err;\n  //     } else {\n  //       errMsg = error;\n  //     }\n  //     console.error(errMsg);\n  //     // return Observable.throw(errMsg);\n  //     return errMsg;\n  //   }\n\n\n   //   /**\n   // * Handle Http operation that failed.\n   // * Let the app continue.\n   // * @param operation - name of the operation that failed\n   // * @param result - optional value to return as the observable result\n   // */\n    // private handleError (operation = 'operation') {\n    //   return (error: any) => error;\n    //   // return (error: any): Observable<any> => {\n    //   //   return error;\n    //   // };\n    // }\n}\n","module.exports = \"@import url('https://unpkg.com/bootstrap@3.3.7/dist/css/bootstrap.min.css');\"","module.exports = \"<div class=\\\"container\\\">\\n<form (ngSubmit)=\\\"onSubmit(formLogin)\\\" #formLogin=\\\"ngForm\\\">\\n<div class=\\\"form-group\\\">\\n  <input [ngModel]=\\\"os_type\\\" name=\\\"os_type\\\" type=\\\"hidden\\\">\\n  <input [ngModel]=\\\"email\\\" #txtEmail=\\\"ngModel\\\" name=\\\"email\\\" placeholder=\\\"Mail address\\\" class=\\\"form-control\\\" required>\\n  <p *ngIf=\\\"txtEmail.touched && txtEmail.errors?.required\\\">\\n    Email is not empty\\n  </p>\\n</div>\\n<div class=\\\"form-group\\\">\\n  <input [ngModel]=\\\"password\\\" #txtPassword=\\\"ngModel\\\" name=\\\"password\\\" placeholder=\\\"Password\\\" type=\\\"password\\\" class=\\\"form-control\\\" required>\\n  <p *ngIf=\\\"txtPassword.touched && txtPassword.errors?.required\\\">\\n    Password is not empty\\n  </p>\\n</div>\\n  <button class=\\\"btn btn-success\\\" [disabled]=\\\"formLogin.invalid\\\">Submit</button>\\n</form>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {LoginService } from '../login.service';\nimport { Location } from '@angular/common';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  private fagLg = false;\n  private email = 'duc4@runsystem.net';\n  private password = '123321';\n  private os_type = 1;\n  private errors = '';\n\n  onSubmit(formLogin): void {\n    const body = formLogin.value;\n    this.loginService.loginPolan(body).subscribe(\n      data => this.readData(data),\n      error => console.log('oops', error.error.data)\n    );\n  }\n\n  constructor(\n    private loginService: LoginService,\n    private localtion: Location,\n    private router: Router) {\n  }\n\n  ngOnInit() {\n  }\n\n  private readData(data){\n    if(data.code == 200){\n      let token = data.data.token;\n      localStorage.setItem('token',token);\n      this.router.navigate(['dashboard']);\n    }\n    \n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MessageService {\n    messages : string[] = [];\n\n    add(message: string){\n        this.messages.push(message);\n    }\n\n    clear(){\n        this.messages = [];\n    }\n\n  constructor() { }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"messageService.messages.length\\\">\\n\\n  <h2>Messages</h2>\\n  <button class=\\\"clear\\\"\\n          (click)=\\\"messageService.clear()\\\">clear</button>\\n  <div *ngFor='let message of messageService.messages'> {{message}} </div>\\n\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  <a target=\\\"_blank\\\" (click)=\\\"scan()\\\" style=\\\"text-decoration: none\\\"><button>Scan</button></a>\\n  <a target=\\\"_blank\\\" href=\\\"#display\\\" style=\\\"text-decoration: none\\\"><button>Display Scanned Data</button></a>\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { LocalStorage } from '@ngx-pwa/local-storage';\n\n@Component({\n  selector: 'app-scans',\n  templateUrl: './scans.component.html',\n  styleUrls: ['./scans.component.css']\n})\nexport class ScansComponent implements OnInit {\n\n  constructor(protected localStorage: LocalStorage) {\n  }\n\n  ngOnInit() {\n      localStorage.setItem(\"username\", \"John\");\n      if(localStorage.getItem(\"LocalData\") == \"undefined\" || localStorage.getItem(\"LocalData\") == null){\n          localStorage.setItem(\"LocalData\", JSON.stringify([]));\n      }\n  }\n\n  scan():void{\n   //  cordova.plugins.barcodeScanner.scan(\n   //      function (result) {\n   //          if(!result.cancelled)\n   //          {\n   //              if(result.format == \"QR_CODE\")\n   //              {\n   //                  navigator.notification.prompt(\"Please enter name of data\",  function(input){\n   //                      var name = input.input1;\n   //                      var value = result.text;\n   //                      var data = localStorage.getItem(\"LocalData\");\n   //                      console.log(data);\n   //                      data = JSON.parse(data);\n   //                      data[data.length] = [name, value];\n   //                      localStorage.setItem(\"LocalData\", JSON.stringify(data));\n   //                      alert(\"Done\");\n   //                  });\n   //              }\n   //          }\n   //      },\n   //      function (error) {\n   //          alert(\"Scanning failed: \" + error);\n   //      }\n   // );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}